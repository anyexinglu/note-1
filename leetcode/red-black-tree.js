/**
 * https://www.jianshu.com/p/e136ec79235c
 * 定义
 * 红黑树：
 * 性质1：每个节点要么是黑色，要么是红色
 * 性质2：根节点是黑色
 * 性质3：每个叶子节点是黑色
 * 性质4：每个红色节点的两个子节点一定都是黑色
 * 性质5：任意一节点到每个叶子节点的路径都包含数量相同的黑节点。**
 * 性质5推断出：如果一个节点存在黑子节点，那么该节点肯定有两个子节点
 *
 * 红黑树自平衡三种操作：左旋、右旋、变色
 * 左旋：以某个节点作为支点(旋转节点)，其右子节点变为旋转节点的父节点，右子节点的左子节点变为旋转节点的
 * 右子节点，左子节点保持不变。
 * 右旋：以某个节点作为支点(旋转节点)，其左子节点变为旋转节点的父节点，左子节点的右子节点变为旋转节点的
 * 左子节点，右子节点保持不变。
 * 变色：节点的颜色由红变黑或由黑变红。
 * 红黑树总是通过旋转和变色达到自平衡。
 */

/**
 * 红黑树的查找
 * 1. 从根节点开始查找，把根节点设置为当前节点
 * 2. 若当前节点为空，返回 null
 * 3. 若当前节点不为空，用当前节点的 key 跟查找 key 作比较
 * 4. 若当前节点 key 等会查找 key，那么该 key 就是查找目标，返回当前节点
 * 5. 若当前节点 key 大于查找 key，把当前节点的左子节点设置为当前节点，重复步骤 2
 * 6. 若当前节点 key 小于查找 key，把当前节点的右子节点设置为当前节点，重复步骤 2
 */

/**
 * 红黑树插入
 * 插入分为两部分：1. 查找插入的位置 2. 插入后自平衡。
 * 1. 从根结点开始查找；
 * 2. 若根结点为空，那么插入结点作为根结点，结束。
 * 3. 若根结点不为空，那么把根结点作为当前结点；
 * 4. 若当前结点为null，返回当前结点的父结点，结束。
 * 5. 若当前结点key等于查找key，那么该key所在结点就是插入结点，更新结点的值，结束。
 * 6. 若当前结点key大于查找key，把当前结点的左子结点设置为当前结点，重复步骤4；
 * 7. 若当前结点key小于查找key，把当前结点的右子结点设置为当前结点，重复步骤4
 */
